import { Formik, Form, Field, ErrorMessage } from "formik";
import * as Yup from "yup";
import { useState } from "react";

const AddToQueueForm = () => {
  const [loading, setLoading] = useState(false);

  const initialValues = {
    personName: "",
    personPhone: "",
    numberOfItems: "",
    notes: "",
  };

  const validationSchema = Yup.object({
    personName: Yup.string()
      .min(3, "ุงูุงุณู ูุฌุจ ุฃู ูุญุชูู ุนูู 3 ุฃุญุฑู ุนูู ุงูุฃูู")
      .max(100, "ุงูุงุณู ูุง ูุฌุจ ุฃู ูุชุฌุงูุฒ 100 ุญุฑู")
      .required("ุงุณู ุงูุดุฎุต ูุทููุจ"),
    personPhone: Yup.string()
      .matches(/^[0-9]{10}$/, "ุฑูู ุงููุงุชู ูุฌุจ ุฃู ูููู 10 ุฃุฑูุงู")
      .required("ุฑูู ุงููุงุชู ูุทููุจ"),
    numberOfItems: Yup.number()
      .typeError("ูุฌุจ ุฅุฏุฎุงู ุฑูู")
      .min(1, "ูุฌุจ ุฃู ูููู ุงูุนุฏุฏ 1 ุนูู ุงูุฃูู")
      .required("ุนุฏุฏ ุงูุนูุงุตุฑ ูุทููุจ"),
    notes: Yup.string().max(255, "ุงูููุงุญุธุงุช ูุง ูุฌุจ ุฃู ุชุชุฌุงูุฒ 255 ุญุฑู"),
  });

  const handleSubmit = async (values, { resetForm }) => {
    try {
      setLoading(true);
      console.log("๐ ุงูุจูุงูุงุช ุงููุฑุณูุฉ:", values);
      await new Promise((resolve) => setTimeout(resolve, 1000));
      alert("ุชู ุงูุญูุธ ุจูุฌุงุญ โ");
      resetForm();
    } catch (error) {
      console.error(error);
      alert("ุญุฏุซ ุฎุทุฃ ูุง โ");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="bg-white p-6 rounded-2xl shadow-md w-full ">
      <h2 className="text-xl font-semibold mb-4">ุฅุถุงูุฉ ุฅูู ุงูุทุงุจูุฑ</h2>
      <Formik
        initialValues={initialValues}
        validationSchema={validationSchema}
        onSubmit={handleSubmit}
      >
        <Form className="space-y-7">
          {/* ุงูุงุณู */}
          <div>
            <label
              htmlFor="personName"
              className="block text-sm font-medium text-gray-700"
            >
              ุงุณู ุงูุดุฎุต
            </label>
            <Field
              type="text"
              name="personName"
              id="personName"
              className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2"
            />
            <ErrorMessage
              name="personName"
              component="div"
              className="text-red-500 text-sm mt-1"
            />
          </div>

          {/* ุงููุงุชู */}
          <div>
            <label
              htmlFor="personPhone"
              className="block text-sm font-medium text-gray-700"
            >
              ุฑูู ุงููุงุชู
            </label>
            <Field
              type="text"
              name="personPhone"
              id="personPhone"
              className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2"
            />
            <ErrorMessage
              name="personPhone"
              component="div"
              className="text-red-500 text-sm mt-1"
            />
          </div>

          {/* ุนุฏุฏ ุงูุนูุงุตุฑ */}
          <div>
            <label
              htmlFor="numberOfItems"
              className="block text-sm font-medium text-gray-700"
            >
              ุนุฏุฏ ุงูุนูุงุตุฑ
            </label>
            <Field
              type="number"
              name="numberOfItems"
              id="numberOfItems"
              className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2"
            />
            <ErrorMessage
              name="numberOfItems"
              component="div"
              className="text-red-500 text-sm mt-1"
            />
          </div>

          {/* ุงูููุงุญุธุงุช */}
          <div>
            <label
              htmlFor="notes"
              className="block text-sm font-medium text-gray-700"
            >
              ุงูููุงุญุธุงุช
            </label>
            <Field
              as="textarea"
              name="notes"
              id="notes"
              className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2"
            />
            <ErrorMessage
              name="notes"
              component="div"
              className="text-red-500 text-sm mt-1"
            />
          </div>

          <button
            type="submit"
            disabled={loading}
            className="px-4 py-2 bg-secondary-100 text-white rounded hover:bg-secondary-200 disabled:bg-gray-400"
          >
            {loading ? "ุฌุงุฑู ุงูุญูุธ..." : "ุญูุธ"}
          </button>
        </Form>
      </Formik>
    </div>
  );
};

export default AddToQueueForm;
